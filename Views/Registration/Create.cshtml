@model Facelift_App.Models.RegistrationVM


@{
    ViewBag.Title += " - Create";
}



    <div class="container-fluid">

        <div class="d-sm-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
        </div>

        <div class="row mb-3">
            <div class="col-xs-6 col-lg-6">
                <button type="button" onclick="goBack()" class="btn btn-info btn-icon-split">
                    <span class="icon text-white-50">
                        <i class="fas fa-arrow-left"></i>
                    </span>
                    <span class="text">Back</span>
                </button>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-xs-6 col-lg-6">
                <div class="card shadow border-left-primary">
                    <div class="card-body">
                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="tab-1" data-toggle="tab" href="#tab1" role="tab" aria-controls="tab1" aria-selected="true">Document Information</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="tab-1">
                                <div class="row mt-3 mb-3">
                                    <div class="col-xs-12 col-lg-12">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainFrm" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div class="form-group row">
                                                <label class="col-form-label col-sm-4">Owner</label>
                                                <div class="col-sm-8">
                                                    @*@Html.EditorFor(model => model.PalletOwner, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })*@
                                                    @Html.DropDownListFor(model => model.CompanyId, (SelectList)ViewBag.CompanyList, "Please select", htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "help-block text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-form-label col-sm-4">Producer</label>
                                                <div class="col-sm-8">
                                                    @*@Html.EditorFor(model => model.PalletProducer, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })*@
                                                    @Html.DropDownListFor(model => model.ProducerName, (SelectList)ViewBag.ProducerList, "Please select", htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.ProducerName, "", new { @class = "help-block text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-form-label col-sm-4">Warehouse</label>
                                                <div class="col-sm-8">
                                                    @Html.TextBox("Warehouse", null, new { @class = "form-control-plaintext", @Value = Model.WarehouseCode + " - " + Model.WarehouseName, @readonly = "" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-form-label col-sm-4">Production Date <i class="fas fa-info-circle text-info" data-toggle="tooltip" data-placement="top" title="Pallet Production Date"></i></label>
                                                <div class="col-sm-8">
                                                    @Html.EditorFor(model => model.ProducedDate, new { htmlAttributes = new { @class = "form-control datepicker", @autocomplete = "off", @Value = "" } })
                                                    @Html.ValidationMessageFor(model => model.ProducedDate, "", new { @class = "help-block text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-form-label col-sm-4">Delivery Note <span class="text-info">(Optional)</span></label>
                                                <div class="col-sm-8">
                                                    @Html.EditorFor(model => model.DeliveryNote, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.DeliveryNote, "", new { @class = "help-block text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-form-label col-sm-4">Pallet Type</label>
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(model => model.PalletTypeId, (SelectList)ViewBag.TypeList, "Please select", htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.PalletTypeId, "", new { @class = "help-block text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-form-label col-sm-4">Description <span class="text-info">(Optional)</span></label>
                                                <div class="col-sm-8">
                                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @autocomplete = "off", @rows = 3 })
                                                </div>
                                            </div>
                                            <div class="row mt-4">
                                                <div class="col-md-12">
                                                    <div class="fa-pull-right">
                                                        <button type="button" onclick="resetForm()" class="btn btn-warning btn-icon-split">
                                                            <span class="icon text-white-50">
                                                                <i class="fas fa-backspace"></i>
                                                            </span>
                                                            <span class="text">Cancel</span>
                                                        </button>
                                                        <button type="button" onclick="submitForm()" class="btn btn-primary btn-icon-split">
                                                            <span class="icon text-white-50">
                                                                <i class="fas fa-save"></i>
                                                            </span>
                                                            <span class="text">Save</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
@Html.Partial("ConfirmationModal")

@section custom_css
{
    @Styles.Render("~/Content/vendor/bootstrap-datepicker/css/bootstrap-datepicker3.min.css")
    @Styles.Render("~/Content/vendor/toastr/toastr.css")
}
@section custom_js
{
    @Scripts.Render("~/Content/vendor/bootstrap-datepicker/js/bootstrap-datepicker.min.js")
    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")
    @Scripts.Render("~/Content/vendor/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
    <script>

        $(document).ready(function () {

            //add bootstrap 4 validation css
            $('#mainFrm').validate().settings.errorClass += ' is-invalid';
            //$('#mainFrm').validate().settings.validClass += ' is-valid';

            $('#mainFrm').keypress(function (e) {
                var key = e.charCode || e.keyCode || 0;
                if (key == 13) {
                    e.preventDefault();
                }
            });           
        });


        $('.datepicker').datepicker({
            format: "dd M yyyy",
            todayBtn: "linked",
            todayHighlight: true,
            orientation: "left",
            autoclose: true,
            endDate: '+0d',
        });

        function goBack() {
            location.href = '@Url.Action("Index")';
        }

        function resetForm() {
            $('#mainFrm')[0].reset();
            $('#mainFrm .form-group input').removeClass('is-invalid');
            $('#mainFrm .help-block').html('');
        }


        function submitForm() {
            let form = $('#mainFrm');
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $('#confirmationModal').modal('show');
            } else {
                notify("Info", "info", "Please complete form below.");
            }
        }

        $('#btnModalSave').click(function () {
            let form = $('#mainFrm');
            //double validation, prevent duplication
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                saveData(form);
            } else {
                notify("Info", "info", "Please complete form below.");
            }
        });

        function saveData(form) {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: form.action,
                data: $(form).serialize(),
                success: function (response) {

                    if (response.stat) {
                        location.href = '@Url.Action("Detail")?x=' + response.transactionId;
                        
                        //resetForm();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
        }


    </script>
}