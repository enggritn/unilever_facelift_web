@model Facelift_App.Models.ShipmentBA


@{
    ViewBag.Title += " - Create Berita Acara";
}



<div class="container-fluid">

    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
    </div>

    <div class="row mb-3">
        <div class="col-xs-12 col-lg-12">
            <button type="button" onclick="goBack()" class="btn btn-info btn-icon-split">
                <span class="icon text-white-50">
                    <i class="fas fa-arrow-left"></i>
                </span>
                <span class="text">Back</span>
            </button>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-xs-12 col-lg-12">
            <div class="card shadow border-left-primary">
                <div class="card-body">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="tab-1" data-toggle="tab" href="#tab1" role="tab" aria-controls="tab1" aria-selected="true">Document Information</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="tab-1">
                            <div class="row mt-3">
                                <div class="col-xs-6 col-lg-6">
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Document Number</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipment.TransactionCode, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Origin</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipment.WarehouseName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Destination</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipment.DestinationName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Transaction Status</label>
                                        <div class="col-sm-8">
                                            <div class="form-control-plaintext">
                                                @Html.Raw(Model.shipment.TransactionStatus)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Shipment Status</label>
                                        <div class="col-sm-8">
                                            <div class="form-control-plaintext">
                                                @Html.Raw(Model.shipment.ShipmentStatus)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-lg-6">
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Shipment Number <span class="text-info">(Optional)</span></label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipment.ShipmentNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = string.IsNullOrEmpty(Model.shipment.ShipmentNumber) ? "-" : Model.shipment.ShipmentNumber } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Transporter</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipment.TransporterName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Driver</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipment.DriverName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Truck</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipment.PlateNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Remarks <span class="text-info">(Optional)</span></label>
                                        <div class="col-sm-8">
                                            @Html.TextArea("Remarks", string.IsNullOrEmpty(Model.Remarks) ? "-" : Model.Remarks, new { @class = "form-control-plaintext", @readonly = "", @autocomplete = "off", @rows = 3 })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="offset-4 col-sm-8">
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(model => model.shipment.IsEmptyPallet, new { @class = "custom-control-input", @disabled = true })
                                                <label class="custom-control-label" for="IsEmptyPallet">Empty Pallet</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-xs-6 col-lg-6">
                                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainFrm" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">BA Reason</label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => model.ReasonName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Remarks <span class="text-info">(Optional)</span></label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", @autocomplete = "off", @rows = 3 })

                                            </div>
                                        </div>
                                        <div class="row mt-4">
                                            <div class="col-md-12">
                                                <div class="fa-pull-right">
                                                    <button type="button" onclick="resetForm()" class="btn btn-warning btn-icon-split">
                                                        <span class="icon text-white-50">
                                                            <i class="fas fa-backspace"></i>
                                                        </span>
                                                        <span class="text">Cancel</span>
                                                    </button>
                                                    <button type="button" onclick="submitForm()" class="btn btn-primary btn-icon-split">
                                                        <span class="icon text-white-50">
                                                            <i class="fas fa-save"></i>
                                                        </span>
                                                        <span class="text">Save</span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@Html.Partial("ConfirmationModal")

@section custom_css
{
    @Styles.Render("~/Content/vendor/toastr/toastr.css")
}
@section custom_js
{
    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")
    @Scripts.Render("~/Content/vendor/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
<script>

        let id = '@ViewBag.Id';


        $(document).ready(function () {

            //add bootstrap 4 validation css
            $('#mainFrm').validate().settings.errorClass += ' is-invalid';


            //$('#mainFrm').validate().settings.validClass += ' is-valid';

            //$('#mainFrm').keypress(function (e) {
            //    var key = e.charCode || e.keyCode || 0;
            //    if (key == 13) {
            //        e.preventDefault();
            //    }
            //});

        });

        function Refresh() {
            location.reload();
        }

        function goBack() {
            location.href = '@Url.Action("Detail")?x=' + id;
        }


        function submitForm() {
            let form = $('#mainFrm');
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $('#confirmationModal').modal('show');
            } else {
                notify("Info", "info", "Please complete form below.");
            }
        }

        $('#btnModalSave').click(function () {
            let form = $('#mainFrm');
            //double validation, prevent duplication
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                saveData(form);
            } else {
                notify("Info", "info", "Please complete form below.");
            }
        });

        function saveData(form) {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: form.action,
                data: $(form).serialize(),
                success: function (response) {

                    if (response.stat) {
                        notify("Success", "success", response.msg);

                        //resetForm();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
        }


</script>
}