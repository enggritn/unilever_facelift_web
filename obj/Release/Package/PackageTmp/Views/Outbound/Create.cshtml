@model Facelift_App.Models.ShipmentVM


@{
    ViewBag.Title += " - Create";
}


<div class="container-fluid">

    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
    </div>

    <div class="row mb-3">
        <div class="col-xs-6 col-lg-6">
            <button type="button" onclick="goBack()" class="btn btn-info btn-icon-split">
                <span class="icon text-white-50">
                    <i class="fas fa-arrow-left"></i>
                </span>
                <span class="text">Back</span>
            </button>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-xs-6 col-lg-6">
            <div class="card shadow border-left-primary">
                <div class="card-body">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="tab-1" data-toggle="tab" href="#tab1" role="tab" aria-controls="tab1" aria-selected="true">Document Information</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="tab-1">
                            <div class="row mt-3 mb-3">
                                <div class="col-xs-12 col-lg-12">
                                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainFrm" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Origin</label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.WarehouseName, new { @class = "form-control-plaintext", @readonly = "" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Shipment Number <span class="text-info">(Optional)</span></label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => model.ShipmentNumber, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.ShipmentNumber, "", new { @class = "help-block text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Destination</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(model => model.DestinationId, (SelectList)ViewBag.DestinationList, "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                @Html.ValidationMessageFor(model => model.DestinationId, "", new { @class = "help-block text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Transporter</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(model => model.TransporterId, (SelectList)ViewBag.TransporterList, "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                @Html.ValidationMessageFor(model => model.TransporterId, "", new { @class = "help-block text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Driver</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownList("DriverId", Enumerable.Empty<SelectListItem>(), "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "help-block text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Truck</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownList("TruckId", Enumerable.Empty<SelectListItem>(), "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                @Html.ValidationMessageFor(model => model.TruckId, "", new { @class = "help-block text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Pallet Quantity</label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => model.PalletQty, new { htmlAttributes = new { @class = "form-control number", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.PalletQty, "", new { @class = "help-block text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Remarks <span class="text-info">(Optional)</span></label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", @autocomplete = "off", @rows = 3 })
                                            </div>
                                        </div>
                                        <div class="row mt-4">
                                            <div class="col-md-12">
                                                <div class="fa-pull-right">
                                                    <button type="button" onclick="resetForm()" class="btn btn-warning btn-icon-split">
                                                        <span class="icon text-white-50">
                                                            <i class="fas fa-backspace"></i>
                                                        </span>
                                                        <span class="text">Cancel</span>
                                                    </button>
                                                    <button type="button" onclick="submitForm()" class="btn btn-primary btn-icon-split">
                                                        <span class="icon text-white-50">
                                                            <i class="fas fa-save"></i>
                                                        </span>
                                                        <span class="text">Save</span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@Html.Partial("ConfirmationModal")

@section custom_css
{
    @Styles.Render("~/Content/vendor/select2/css/select2.css")
    @Styles.Render("~/Content/vendor/select2/css/select2-bootstrap.css")
    @Styles.Render("~/Content/vendor/toastr/toastr.css")
    <style>
        .is-invalid .select2-selection,
        .needs-validation ~ span > .select2-dropdown {
            border-color: red !important;
        }
    </style>
}
@section custom_js
{
    @Scripts.Render("~/Content/vendor/select2/js/select2.js")
    @Scripts.Render("~/Content/vendor/inputmask/js/jquery.inputmask.bundle.js")
    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")
    @Scripts.Render("~/Content/vendor/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
<script>

        $(document).ready(function () {

            $('.number').inputmask("9{*}", { "placeholder": "" });
            //add bootstrap 4 validation css
            $('#mainFrm').validate().settings.errorClass += ' is-invalid';


            //$('#mainFrm').validate().settings.validClass += ' is-valid';

            $('#mainFrm').keypress(function (e) {
                var key = e.charCode || e.keyCode || 0;
                if (key == 13) {
                    e.preventDefault();
                }
            });


            $('.sel2').select2({
                theme: "bootstrap"
            }).change(function () {
                $(this).valid();
            });


            //$(".sel2 + span").addClass("is-invalid");

        });


        $(".sel2").change(function () {
            $(this).valid();
        });

        $('#TransporterId').on('change', function () {
            let transporterId = $(this).val();
            loadTransporterDetail(transporterId);
        });

        function loadTransporterDetail(transporterId) {
            if (transporterId) {
                $("#DriverId .select2-container").prop('disabled', true);
                $("#TruckId .select2-container").prop('disabled', true);
                $('#DriverId').next(".select2-container").hide();
                $('#TruckId').next(".select2-container").hide();
                $('<span class="spinner-border text-success"></span>').insertAfter("#DriverId");
                $('<span class="spinner-border text-success"></span>').insertAfter("#TruckId");
                LoadDriver(transporterId);
                LoadTruck(transporterId);
            } else {
                $("#DriverId").empty();
                $('#DriverId').append("<option value>Please select</option>");
                $("#TruckId").empty();
                $('#TruckId').append("<option value>Please select</option>");
            }
        }

        function LoadDriver(id) {
            $.get('@Url.Action("GetDriverByTransporterId")', { transporterId: id }, function (response) {
                 if (response.stat) {

                     var datas = response.list;

                     $("#DriverId").empty();
                     $('#DriverId').append("<option value>Please select</option>");
                     $(datas).each(function (k, v) {
                         let data = v;
                         $("#DriverId").append("<option value='" + data.DriverId + "'>" + data.DriverName + "</option>");
                     });
                     $("#DriverId").prop('disabled', false);
                     $('#DriverId').next().remove();
                     $('#DriverId').next(".select2-container").show();

                } else {
                    notify("Warning", "warning", response.msg);
                 }
            });
        }

        function LoadTruck(id) {
            $.get('@Url.Action("GetTruckByTransporterId")', { transporterId: id }, function (response) {
                 if (response.stat) {

                     var datas = response.list;

                     $("#TruckId").empty();
                     $('#TruckId').append("<option value>Please select</option>");
                     $(datas).each(function (k, v) {
                         let data = v;
                         $("#TruckId").append("<option value='" + data.TruckId + "'>" + data.PlateNumber + "</option>");
                     });
                     $("#TruckId").prop('disabled', false);
                     $('#TruckId').next().remove();
                     $('#TruckId').next(".select2-container").show();

                } else {
                    notify("Warning", "warning", response.msg);
                 }
            });
        }


        function goBack() {
            location.href = '@Url.Action("Index")';
        }

        function resetForm() {
            $(".sel2").val('').trigger('change');
            $('#mainFrm')[0].reset();
            $('#mainFrm .form-group input').removeClass('is-invalid');
            $('#mainFrm .help-block').html('');

        }


        function submitForm() {
            let form = $('#mainFrm');
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                $('#confirmationModal').modal('show');
            } else {
                notify("Info", "info", "Please complete form below.");
            }
        }

        $('#btnModalSave').click(function () {
            let form = $('#mainFrm');
            //double validation, prevent duplication
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                saveData(form);
            } else {
                notify("Info", "info", "Please complete form below.");
            }
        });

        function saveData(form) {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: form.action,
                data: $(form).serialize(),
                success: function (response) {

                    if (response.stat) {
                        location.href = '@Url.Action("Detail")?x=' + response.transactionId;

                        //resetForm();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
        }
</script>
}