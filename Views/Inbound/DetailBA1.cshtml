@model Facelift_App.Models.ShipmentVM


@{
    ViewBag.Title += " - Detail Berita Acara";
}



<div class="container-fluid">

    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
    </div>

    <div class="row mb-3">
        <div class="col-xs-12 col-lg-12">
            <button type="button" onclick="goBack()" class="btn btn-info btn-icon-split">
                <span class="icon text-white-50">
                    <i class="fas fa-arrow-left"></i>
                </span>
                <span class="text">Back</span>
            </button>
            <button type="button" class="btn btn-secondary btn-icon-split" onclick="Refresh()">
                <span class="icon text-white-50">
                    <i class="fas fa-sync"></i>
                </span>
                <span class="text">Refresh</span>
            </button>
            <div class="fa-pull-right">
                @if (ViewBag.ShipmentStatus.Equals("DISPATCH"))
                {
                    <button type="button" onclick="postForm()" class="btn btn-success btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-check-circle"></i>
                        </span>
                        <span class="text">Approve Document</span>
                    </button>
                }
            </div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-xs-12 col-lg-12">
            <div class="card shadow border-left-primary">
                <div class="card-body">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="tab-1" data-toggle="tab" href="#tab1" role="tab" aria-controls="tab1" aria-selected="true">Document Information</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="tab-2" data-toggle="tab" href="#tab2" role="tab" aria-controls="tab2" aria-selected="false">Item Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="tab-3" data-toggle="tab" href="#tab3" role="tab" aria-controls="tab3" aria-selected="false">Document Logs</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="tab-1">
                            <div class="row mt-3">
                                <div class="col-xs-6 col-lg-6">
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Document Number</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.TransactionCode, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Origin</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.WarehouseName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Destination</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.DestinationName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Transaction Status</label>
                                        <div class="col-sm-8">
                                            <div class="form-control-plaintext">
                                                @Html.Raw(Model.TransactionStatus)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Shipment Status</label>
                                        <div class="col-sm-8">
                                            <div class="form-control-plaintext">
                                                @Html.Raw(Model.ShipmentStatus)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-lg-6">
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Shipment Number <span class="text-info">(Optional)</span></label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.ShipmentNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = string.IsNullOrEmpty(Model.ShipmentNumber) ? "-" : Model.ShipmentNumber } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Transporter</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.TransporterName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Driver</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Truck</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.PlateNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Remarks <span class="text-info">(Optional)</span></label>
                                        <div class="col-sm-8">
                                            @Html.TextArea("Remarks", string.IsNullOrEmpty(Model.Remarks) ? "-" : Model.Remarks, new { @class = "form-control-plaintext", @readonly = "", @autocomplete = "off", @rows = 3 })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="offset-4 col-sm-8">
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(model => model.IsEmptyPallet, new { @class = "custom-control-input", @disabled = true })
                                                <label class="custom-control-label" for="IsEmptyPallet">Empty Pallet</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-xs-6 col-lg-6">
                                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainFrm" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Shipment Number <span class="text-info">(Optional)</span></label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                {
                                                    @Html.EditorFor(model => model.ShipmentNumber, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.ShipmentNumber, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.ShipmentNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = string.IsNullOrEmpty(Model.ShipmentNumber) ? "-" : Model.ShipmentNumber } })
                                                }

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Transporter</label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                {
                                                    @Html.DropDownListFor(model => model.TransporterId, (SelectList)ViewBag.TransporterList, "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                    @Html.ValidationMessageFor(model => model.TransporterId, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.TransporterName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Driver</label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                {
                                                    @Html.DropDownList("DriverId", Enumerable.Empty<SelectListItem>(), "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                    @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Truck</label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                {
                                                    @Html.DropDownList("TruckId", Enumerable.Empty<SelectListItem>(), "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                    @Html.ValidationMessageFor(model => model.TruckId, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.PlateNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Remarks <span class="text-info">(Optional)</span></label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                {
                                                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", @autocomplete = "off", @rows = 3 })
                                                }
                                                else
                                                {
                                                    @Html.TextArea("Remarks", string.IsNullOrEmpty(Model.Remarks) ? "-" : Model.Remarks, new { @class = "form-control-plaintext", @readonly = "", @autocomplete = "off", @rows = 3 })
                                                }

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="offset-4 col-sm-8">
                                                <div class="custom-control custom-checkbox">
                                                    @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                    {
                                                        @Html.CheckBoxFor(model => model.IsEmptyPallet, new { @class = "custom-control-input" })
                                                    }
                                                    else
                                                    {
                                                        @Html.CheckBoxFor(model => model.IsEmptyPallet, new { @class = "custom-control-input", @disabled = true })
                                                    }

                                                    <label class="custom-control-label" for="IsEmptyPallet">Empty Pallet</label>
                                                </div>
                                            </div>
                                        </div>
                                        if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                        {
                                            <div class="row mt-4">
                                                <div class="col-md-12">
                                                    <div class="fa-pull-right">
                                                        <button type="button" onclick="resetForm()" class="btn btn-warning btn-icon-split">
                                                            <span class="icon text-white-50">
                                                                <i class="fas fa-backspace"></i>
                                                            </span>
                                                            <span class="text">Cancel</span>
                                                        </button>
                                                        <button type="button" onclick="submitForm()" class="btn btn-primary btn-icon-split">
                                                            <span class="icon text-white-50">
                                                                <i class="fas fa-save"></i>
                                                            </span>
                                                            <span class="text">Save</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab2" role="tabpanel" aria-labelledby="tab-2">
                            <div class="row mt-3 mb-3">
                                <div class="col-xs-12 col-lg-12">
                                    <div class="d-sm-flex align-items-center justify-content-between mb-1">
                                        <h5 class="h3 mb-0 text-gray-800">Pallet List</h5>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-3 mb-3">
                                <div class="col-lg-12">
                                    <button type="button" class="btn btn-secondary btn-icon-split" onclick="RefreshItem()">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-sync"></i>
                                        </span>
                                        <span class="text">Refresh</span>
                                    </button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <span class="text-muted">Pallet : <b id="totalScanned">0</b> / <b id="totalPallet"></b></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="table-responsive">
                                        <table class="table table-bordered table-striped" id="itemTable" width="100%" cellspacing="0">
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th>Tag Id</th>
                                                    <th>Pallet Type</th>
                                                    <th>Pallet Owner</th>
                                                    <th>Pallet Producer</th>
                                                    <th>Received By</th>
                                                    <th>Received At</th>
                                                    <th>Movement Status</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab3" role="tabpanel" aria-labelledby="tab-3">
                            <div class="row mt-3 mb-3">
                                <div class="col-xs-12 col-lg-12">
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>No.</th>
                                                    <th>Action Name</th>
                                                    <th>Executed By</th>
                                                    <th>Executed At</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.logs.Any())
                                                {
                                                    int num = 1;
                                                    foreach (var log in Model.logs)
                                                    {
                                                        <tr>
                                                            <td>@(num++)</td>
                                                            <td>@log.ActionName</td>
                                                            <td>@log.ExecutedBy</td>
                                                            <td>@log.ExecutedAt.ToString("dd MMM yyyy HH:mm:ss")</td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="4" class="text-center">No Data</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@Html.Partial("ConfirmationModal")

@section custom_css
{
    @Styles.Render("~/Content/vendor/toastr/toastr.css")
    @Styles.Render("~/Content/vendor/datatables/dataTables.bootstrap4.min.css")
    @Styles.Render("~/Content/vendor/datatables/fixedColumns.bootstrap4.min.css")
}
@section custom_js
{
    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")
    @Scripts.Render("~/Content/vendor/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
    @Scripts.Render("~/Content/vendor/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/vendor/datatables/dataTables.bootstrap4.min.js")
    @Scripts.Render("~/Content/vendor/datatables/dataTables.fixedColumns.min.js")
<script>

        let id = '@ViewBag.Id';


        $(document).ready(function () {

            let tempMessage = '@ViewBag.TempMessage';
            if (tempMessage) {
                notify("Success", "success", tempMessage);
            }

            $('#tab-2').on('shown.bs.tab', function (e) {
                RefreshItem();
            });

        });

        function Refresh() {
            location.reload();
        }

        function goBack() {
            location.href = '@Url.Action("Detail")?x=' + id;
        }

        function RefreshItem() {
            itemTable.ajax.reload();
        }
       

        var itemTable = $('#itemTable').DataTable({
                processing: true,
                serverSide: true,
                ajax: {
                    url: '@Url.Action("DatatableItem")?id=' + id,
                    type: "POST",
                    datatype: "json"
                },
                scrollY: "500px",
                scrollX: true,
                scrollCollapse: true,
            paging: true,
            fixedColumns: {
                leftColumns: 1
            },
            order: [[0, "asc"]],
            columns: [
                    { "data": "TagId", "name": "TagId", "autoWidth": true },
                    { "data": "PalletTypeName", "name": "PalletName", "autoWidth": true },    
                    { "data": "PalletOwner", "name": "PalletOwner", "autoWidth": true },
                    { "data": "PalletProducer", "name": "PalletProducer", "autoWidth": true },
                    { "data": "ReceivedBy", "name": "ReceivedBy", "autoWidth": true },
                    { "data": "ReceivedAt", "name": "ReceivedAt", "autoWidth": true },
                    { "data": "PalletMovementStatus", "name": "PalletMovementStatus", "autoWidth": true },

            ]
        });

        itemTable.on('xhr', function () {
            let response = itemTable.ajax.json();
            //recordsTotal = response.recordsTotal;
            let totalPallet = response.recordsTotal;
            let totalScanned = response.totalScanned;
            $('#totalScanned').html(totalScanned);
            $('#totalPallet').html(totalPallet);
        });

</script>
}