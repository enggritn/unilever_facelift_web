@model Facelift_App.Models.BillingConfigurationVM

@{
    ViewBag.Title += " - Detail";
}

<div class="container-fluid">

    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
    </div>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainFrm" }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="x" value="@ViewBag.Id" />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        <div class="row mb-2">
            <div class="col-xs-6 col-lg-6">
                <div class="card shadow border-left-primary">
                    <div class="card-body">
                        <div class="form-group row">
                            <label class="col-form-label col-sm-4">Depreciation Year</label>
                            <div class="col-sm-8">
                                @Html.EditorFor(model => model.BillingYear, new { htmlAttributes = new { @class = "form-control number", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.BillingYear, "", new { @class = "help-block text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-sm-4">Price / Day</label>
                            <div class="col-sm-8">
                                @Html.EditorFor(model => model.BillingPrice, new { htmlAttributes = new { @class = "form-control price", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.BillingPrice, "", new { @class = "help-block text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="offset-4 col-sm-8">
                                <div class="custom-control custom-checkbox">
                                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "custom-control-input" })
                                    <label class="custom-control-label" for="IsActive">Is Active</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="row mb-4">
            <div class="col-xs-6 col-lg-6">
                <button type="button" onclick="goBack()" class="btn btn-info btn-icon-split">
                    <span class="icon text-white-50">
                        <i class="fas fa-arrow-left"></i>
                    </span>
                    <span class="text">Back</span>
                </button>
                <div class="fa-pull-right">
                    <button type="button" onclick="resetForm()" class="btn btn-warning btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-backspace"></i>
                        </span>
                        <span class="text">Cancel</span>
                    </button>
                    <button type="button" onclick="submitForm()" class="btn btn-primary btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-save"></i>
                        </span>
                        <span class="text">Save</span>
                    </button>
                </div>
            </div>
        </div>
    }

</div>

@Html.Partial("ConfirmationModal")

@section custom_css
{
    @Styles.Render("~/Content/vendor/toastr/toastr.css")
}

@section custom_js
{
    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")
    @Scripts.Render("~/Content/vendor/inputmask/js/jquery.inputmask.bundle.js")
    @Scripts.Render("~/Content/vendor/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
    <script>

        $(document).ready(function () {

            $('.number').inputmask("9{*}", { "placeholder": "" });
            $(".price").inputmask('decimal', {
                'alias': 'numeric',
                'groupSeparator': ',',
                'autoGroup': true,
                'digits': 4,
                'radixPoint': ".",
                'digitsOptional': false,
                'allowMinus': false,
                'placeholder': ''
            });

        //$('#OtherProperty').change(function (e) {

        //    if (someCondition) {
        //        $('#Property').rules('remove', 'required')
        //    } else {
        //        $('#Property').rules('add', 'required')
        //    }

        //});


        //add bootstrap 4 validation css
        $('#mainFrm').validate().settings.errorClass += ' is-invalid';
        //$('#mainFrm').validate().settings.validClass += ' is-valid';
        $('#mainFrm').keypress(function (e) {
            var key = e.charCode || e.keyCode || 0;
            if (key == 13) {
                e.preventDefault();
            }
        });
    });

         function goBack() {
           location.href = '@Url.Action("Index")';
        }

        function resetForm() {
            $("#preloader").show();
            location.reload();
        }

    function submitForm() {
        let form = $('#mainFrm');
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $('#confirmationModal').modal('show');
        } else {
            notify("Info", "info", "Please complete form below.");
        }
    }

    $('#btnModalSave').click(function () {
        let form = $('#mainFrm');
        //double validation, prevent duplication
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            saveData(form);
        } else {
            notify("Info", "info", "Please complete form below.");
        }
    });

        function saveData(form) {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: form.action,
                data: $(form).serialize(),
                success: function (response) {

                    if (response.stat) {
                        $("#preloader").fadeOut("slow");
                        notify("Success", "success", response.msg);
                        $('#confirmationModal').modal('hide');
                    } else {
                        notify("Warning", "warning", response.msg);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                },
                complete: function () {
                    $("#preloader").fadeOut("slow");
                }
            });
        }


    </script>
}