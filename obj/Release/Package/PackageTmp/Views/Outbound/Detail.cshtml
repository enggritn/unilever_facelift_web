@model Facelift_App.Models.ShipmentVM


@{
    ViewBag.Title += " - Detail";
}



<div class="container-fluid">

    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
    </div>

    <div class="row mb-3">
        <div class="col-xs-12 col-lg-12">
            <button type="button" onclick="goBack()" class="btn btn-info btn-icon-split">
                <span class="icon text-white-50">
                    <i class="fas fa-arrow-left"></i>
                </span>
                <span class="text">Back</span>
            </button>
            <button type="button" class="btn btn-secondary btn-icon-split" onclick="Refresh()">
                <span class="icon text-white-50">
                    <i class="fas fa-sync"></i>
                </span>
                <span class="text">Refresh</span>
            </button>
            <div class="fa-pull-right">
                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                {
                    <button type="button" onclick="deleteForm()" class="btn btn-danger btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-trash"></i>
                        </span>
                        <span class="text">Delete Document</span>
                    </button>
                    <button type="button" onclick="generateDN()" class="btn btn-success btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-file"></i>
                        </span>
                        <span class="text">Generate DN</span>
                    </button>
                }
                else if (!ViewBag.TransactionStatus.Equals("CLOSED") && !ViewBag.ShipmentStatus.Equals("RECEIVE") && ViewBag.Role.Equals("R-34193a80fe3e49daa02880c7ed4a5497"))
                {
                    <button type="button" onclick="resetShipment()" class="btn btn-danger btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-trash"></i>
                        </span>
                        <span class="text">Reset Shipment</span>
                    </button>
                    <button type="button" onclick="generateDN()" class="btn btn-success btn-icon-split">
                        <span class="icon text-white-50">
                            <i class="fas fa-file"></i>
                        </span>
                        <span class="text">Generate DN</span>
                    </button>
                }
                @if (ViewBag.ShipmentStatus.Equals("LOADING") && ViewBag.Role.Equals("R-34193a80fe3e49daa02880c7ed4a5497"))
                {
                <button type="button" onclick="Dispatch()" class="btn btn-success btn-icon-split">
                    <span class="icon text-white-50">
                        <i class="fas fa-save"></i>
                    </span>
                    <span class="text">Dispatch</span>
                </button>
                }

            </div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-xs-12 col-lg-12">
            <div class="card shadow border-left-primary">
                <div class="card-body">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="tab-1" data-toggle="tab" href="#tab1" role="tab" aria-controls="tab1" aria-selected="true">Document Information</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="tab-2" data-toggle="tab" href="#tab2" role="tab" aria-controls="tab2" aria-selected="false">Item Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="tab-3" data-toggle="tab" href="#tab3" role="tab" aria-controls="tab3" aria-selected="false">Document Logs</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="tab-4" data-toggle="tab" href="#tab4" role="tab" aria-controls="tab4" aria-selected="false">Document Versions</a>
                        </li>
                        @if (Model.shipmentBA != null)
                        {
                            <li class="nav-item">
                                <a class="nav-link" id="tab-5" data-toggle="tab" href="#tab5" role="tab" aria-controls="tab5" aria-selected="false">Berita Acara</a>
                            </li>
                        }
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="tab-1">
                            <div class="row mt-3">
                                <div class="col-xs-6 col-lg-6">
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Document Number</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.TransactionCode, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Origin</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.WarehouseName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Destination</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.DestinationName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Transaction Status</label>
                                        <div class="col-sm-8">
                                            <div class="form-control-plaintext">
                                                @Html.Raw(Model.TransactionStatus)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Shipment Status</label>
                                        <div class="col-sm-8">
                                            <div class="form-control-plaintext">
                                                @Html.Raw(Model.ShipmentStatus)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-6 col-lg-6">
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Created By</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Created At</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = Model.CreatedAt.ToString("dd MMM yyyy HH:mm:ss") } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Modified By</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = !string.IsNullOrEmpty(Model.ModifiedBy) ? Model.ModifiedBy : "-" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Modified At</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.ModifiedAt, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = @Model.ModifiedAt.HasValue ? Model.ModifiedAt.Value.ToString("d MMM yyyy HH:mm:ss") : "-" } })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-xs-6 col-lg-6">
                                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainFrm" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Shipment Number <span class="text-info">(Optional)</span></label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                {
                                                    @Html.EditorFor(model => model.ShipmentNumber, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.ShipmentNumber, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.ShipmentNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = string.IsNullOrEmpty(Model.ShipmentNumber) ? "-" : Model.ShipmentNumber } })
                                                }

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Transporter</label>
                                            <div class="col-sm-8">
                                                @if ((ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING")) || ViewBag.Role.Equals("R-34193a80fe3e49daa02880c7ed4a5497"))
                                                {
                                                    @Html.DropDownListFor(model => model.TransporterId, (SelectList)ViewBag.TransporterList, "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                    @Html.ValidationMessageFor(model => model.TransporterId, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.TransporterName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Driver</label>
                                            <div class="col-sm-8">
                                                @if ((ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING")) || ViewBag.Role.Equals("R-34193a80fe3e49daa02880c7ed4a5497"))
                                                {
                                                    @Html.DropDownList("DriverId", Enumerable.Empty<SelectListItem>(), "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                    @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Truck</label>
                                            <div class="col-sm-8">
                                                @if ((ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING")) || ViewBag.Role.Equals("R-34193a80fe3e49daa02880c7ed4a5497"))
                                                {
                                                    @Html.DropDownList("TruckId", Enumerable.Empty<SelectListItem>(), "Please select", htmlAttributes: new { @class = "form-control sel2" })
                                                    @Html.ValidationMessageFor(model => model.TruckId, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.PlateNumber, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Pallet Quantity</label>
                                            <div class="col-sm-8">
                                                @if ((ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING")) || ViewBag.Role.Equals("R-34193a80fe3e49daa02880c7ed4a5497"))
                                                {
                                                    @Html.EditorFor(model => model.PalletQty, new { htmlAttributes = new { @class = "form-control number", @autocomplete = "off" } })
                                                    @Html.ValidationMessageFor(model => model.PalletQty, "", new { @class = "help-block text-danger" })
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(model => model.PalletQty, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-form-label col-sm-4">Remarks <span class="text-info">(Optional)</span></label>
                                            <div class="col-sm-8">
                                                @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                                {
                                                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", @autocomplete = "off", @rows = 3 })
                                                }
                                                else
                                                {
                                                    @Html.TextArea("Remarks", string.IsNullOrEmpty(Model.Remarks) ? "-" : Model.Remarks, new { @class = "form-control-plaintext", @readonly = "", @autocomplete = "off", @rows = 3 })
                                                }

                                            </div>
                                        </div>
                                        if ((ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING")) || ViewBag.Role.Equals("R-34193a80fe3e49daa02880c7ed4a5497"))
                                        {
                                            <div class="row mt-4">
                                                <div class="col-md-12">
                                                    <div class="fa-pull-right">
                                                        <button type="button" onclick="resetForm()" class="btn btn-warning btn-icon-split">
                                                            <span class="icon text-white-50">
                                                                <i class="fas fa-backspace"></i>
                                                            </span>
                                                            <span class="text">Cancel</span>
                                                        </button>
                                                        <button type="button" onclick="submitForm()" class="btn btn-primary btn-icon-split">
                                                            <span class="icon text-white-50">
                                                                <i class="fas fa-save"></i>
                                                            </span>
                                                            <span class="text">Save</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab2" role="tabpanel" aria-labelledby="tab-2">
                            <div class="row mt-3 mb-3">
                                <div class="col-xs-12 col-lg-12">
                                    <div class="d-sm-flex align-items-center justify-content-between mb-1">
                                        <h5 class="h3 mb-0 text-gray-800">Pallet List</h5>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-3 mb-3">
                                <div class="col-lg-12">
                                    @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                                    {
                                        <button type="button" class="btn btn-danger btn-icon-split" onclick="DeleteItem()">
                                            <span class="icon text-white-50">
                                                <i class="fas fa-trash-alt"></i>
                                            </span>
                                            <span class="text">Delete</span>
                                        </button>
                                    }
                                    <button type="button" class="btn btn-secondary btn-icon-split" onclick="RefreshItem()">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-sync"></i>
                                        </span>
                                        <span class="text">Refresh</span>
                                    </button>
                                </div>
                            </div>
                            @*<div class="row">
                                <div class="col-sm-3 col-md-3 col-lg-3 mb-4">
                                    <div class="card border-left-dark shadow">
                                        <div class="card-body">
                                            <div class="row no-gutters align-items-center">
                                                <div class="col mr-2">
                                                    <div class="text-xs font-weight-bold text-gray-600 text-uppercase mb-1">Total Pallet</div>
                                                    <div class="h5 mb-0 font-weight-bold text-gray-600"><span id="totalAllPallet">0</span></div>
                                                </div>
                                                <div class="col-auto">
                                                    <i class="fas fa-pallet fa-2x text-gray-600"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3 col-md-3 col-lg-3 mb-4">
                                    <div class="card border-left-dark shadow">
                                        <div class="card-body">
                                            <div class="row no-gutters align-items-center">
                                                <div class="col mr-2">
                                                    <div class="text-xs font-weight-bold text-gray-600 text-uppercase mb-1">Total Scanned Pallet</div>
                                                    <div class="h5 mb-0 font-weight-bold text-gray-600"><span id="totalScannedPallet">0</span></div>
                                                </div>
                                                <div class="col-auto">
                                                    <i class="fas fa-pallet fa-2x text-gray-600"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3 col-md-3 col-lg-3 mb-4">
                                    <div class="card border-left-dark shadow">
                                        <div class="card-body">
                                            <div class="row no-gutters align-items-center">
                                                <div class="col mr-2">
                                                    <div class="text-xs font-weight-bold text-gray-600 text-uppercase mb-1">Total Unscanned Pallet</div>
                                                    <div class="h5 mb-0 font-weight-bold text-gray-600"><span id="totalUnscannedPallet">0</span></div>
                                                </div>
                                                <div class="col-auto">
                                                    <i class="fas fa-pallet fa-2x text-gray-600"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                            @if (ViewBag.TransactionStatus.Equals("OPEN") && ViewBag.ShipmentStatus.Equals("LOADING"))
                            {
                                <div class="row mt-3 mb-3">
                                    <div class="col-lg-12">
                                        <button type="button" class="btn btn-outline-info btn-sm btn-icon-split" id="btnSelectAll">
                                            <span class="icon text-white">
                                                <i class="fas fa-check-circle"></i>
                                            </span>
                                            <span class="text">Select All</span>
                                        </button>
                                    </div>
                                </div>
                                <div class="row mt-3 mb-3">
                                    <div class="col-lg-12">
                                        <span class="text-muted">Pallet selected : <b id="rowSelected">0</b> / <b id="totalRecords"></b></span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row mt-3 mb-3">
                                    <div class="col-lg-12">
                                        <span class="text-muted">Pallet : <b id="totalRecords"></b></span>
                                    </div>
                                </div>
                            }
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="table-responsive">
                                        <table class="table table-bordered table-striped text-nowrap" id="itemTable" width="100%" cellspacing="0">
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th></th>
                                                    <th>Tag Id</th>
                                                    <th>Pallet Type</th>
                                                    <th>Pallet Owner</th>
                                                    <th>Pallet Producer</th>
                                                    <th>Scanned By</th>
                                                    <th>Scanned At</th>
                                                    <th>Dispatched By</th>
                                                    <th>Dispatched At</th>
                                                    <th>Movement Status</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab3" role="tabpanel" aria-labelledby="tab-3">
                            <div class="row mt-3 mb-3">
                                <div class="col-xs-12 col-lg-12">
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>No.</th>
                                                    <th>Action Name</th>
                                                    <th>Executed By</th>
                                                    <th>Executed At</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.logs.Any())
                                                {
                                                    int num = 1;
                                                    foreach (var log in Model.logs)
                                                    {
                                                        <tr>
                                                            <td>@(num++)</td>
                                                            <td>@log.ActionName</td>
                                                            <td>@log.ExecutedBy</td>
                                                            <td>@log.ExecutedAt.ToString("dd MMM yyyy HH:mm:ss")</td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="4" class="text-center">No Data</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab4" role="tabpanel" aria-labelledby="tab-4">
                            <div class="row mt-3 mb-3">
                                <div class="col-xs-12 col-lg-12">
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Version</th>
                                                    <th>Transaction Code</th>
                                                    <th>Shipment Number</th>
                                                    <th>Remarks</th>
                                                    <th>Warehouse</th>
                                                    <th>Origin Warehouse</th>
                                                    <th>Transporter Name</th>
                                                    <th>Driver Name</th>
                                                    <th>Plate Number</th>
                                                    <th>Pallet Qty</th>
                                                    <th>Transaction Status</th>
                                                    <th>Shipment Status</th>
                                                    <th>Executed By</th>
                                                    <th>Executed At</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.versions.Any())
                                                {
                                                    foreach (var version in Model.versions)
                                                    {
                                                <tr>
                                                    <td>@version.Version</td>
                                                    <td>@Model.TransactionCode</td>
                                                    <td>@version.ShipmentNumber</td>
                                                    <td>@version.Remarks</td>
                                                    <td>@version.WarehouseName</td>
                                                    <td>@version.DestinationName</td>
                                                    <td>@version.TransporterName</td>
                                                    <td>@version.DriverName</td>
                                                    <td>@version.PlateNumber</td>
                                                    <td>@version.PalletQty</td>
                                                    <td>@version.TransactionStatus</td>
                                                    <td>@version.ShipmentStatus</td>
                                                    <td>
                                                        @if (!string.IsNullOrEmpty(version.ApprovedBy))
                                                        {
                                                            @version.ApprovedBy;
                                                        }
                                                        else if (!string.IsNullOrEmpty(version.ModifiedBy))
                                                        {
                                                            @version.ModifiedBy;
                                                        }
                                                        else
                                                        {
                                                            @version.CreatedBy;
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (version.ApprovedAt.HasValue)
                                                        {
                                                            @version.ApprovedAt.Value.ToString("dd MMM yyyy HH:mm:ss");
                                                        }
                                                        @if (version.ModifiedAt.HasValue)
                                                        {
                                                            @version.ModifiedAt.Value.ToString("dd MMM yyyy HH:mm:ss");
                                                        }
                                                        else
                                                        {
                                                            @version.CreatedAt.ToString("dd MMM yyyy HH:mm:ss");
                                                        }
                                                    </td>
                                                </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="4" class="text-center">No Data</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if (Model.shipmentBA != null)
                        {
                        <div class="tab-pane fade" id="tab5" role="tabpanel" aria-labelledby="tab-5">
                            <div class="row mt-3">
                                <div class="col-xs-6 col-lg-6">
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Document Number</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipmentBA.TransactionCode, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Transaction Status</label>
                                        <div class="col-sm-8">
                                            <div class="form-control-plaintext">
                                                @Html.Raw(Model.shipmentBA.TransactionStatus)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Accident Type</label>
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.shipmentBA.AccidentType, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Remarks <span class="text-info">(Optional)</span></label>
                                        <div class="col-sm-8">
                                            @Html.TextArea("shipmentBA.Remarks", string.IsNullOrEmpty(Model.shipmentBA.Remarks) ? "-" : Model.shipmentBA.Remarks, new { @class = "form-control-plaintext", @readonly = "", @autocomplete = "off", @rows = 3 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-3 col-md-3 col-lg-3 mb-4">
                                    <div class="card border-left-dark shadow">
                                        <div class="card-body">
                                            <div class="row no-gutters align-items-center">
                                                <div class="col mr-2">
                                                    <div class="text-xs font-weight-bold text-gray-600 text-uppercase mb-1">Total Accident Pallet</div>
                                                    <div class="h5 mb-0 font-weight-bold text-gray-600"><span>@ViewBag.TotalPalletAccident</span></div>
                                                </div>
                                                <div class="col-auto">
                                                    <i class="fas fa-pallet fa-2x text-gray-600"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3 col-md-3 col-lg-3 mb-4">
                                    <div class="card border-left-dark shadow">
                                        <div class="card-body">
                                            <div class="row no-gutters align-items-center">
                                                <div class="col mr-2">
                                                    <div class="text-xs font-weight-bold text-gray-600 text-uppercase mb-1">Total Scanned Pallet</div>
                                                    <div class="h5 mb-0 font-weight-bold text-gray-600"><span>@ViewBag.TotalScannedPalletAccident</span></div>
                                                </div>
                                                <div class="col-auto">
                                                    <i class="fas fa-pallet fa-2x text-gray-600"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-3 col-md-3 col-lg-3 mb-4">
                                    <div class="card border-left-dark shadow">
                                        <div class="card-body">
                                            <div class="row no-gutters align-items-center">
                                                <div class="col mr-2">
                                                    <div class="text-xs font-weight-bold text-gray-600 text-uppercase mb-1">Total Unscanned Pallet</div>
                                                    <div class="h5 mb-0 font-weight-bold text-gray-600"><span>@ViewBag.TotalUnscannedPalletAccident</span></div>
                                                </div>
                                                <div class="col-auto">
                                                    <i class="fas fa-pallet fa-2x text-gray-600"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-4">
                                <div class="col-md-12">
                                    <button type="button" onclick="generateBA()" class="btn btn-success btn-icon-split">
                                        <span class="icon text-white-50">
                                            <i class="fas fa-file"></i>
                                        </span>
                                        <span class="text">View PDF</span>
                                    </button>
                                    @if (ViewBag.AccidentStatus.Equals("PROGRESS"))
                                    {
                                        <button type="button" onclick="approveBA()" class="btn btn-success btn-icon-split">
                                            <span class="icon text-white-50">
                                                <i class="fas fa-paper-plane"></i>
                                            </span>
                                            <span class="text">Approve Document</span>
                                        </button>
                                    }
                                </div>
                                

                            </div>
                            
                        </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("ConfirmationModal")

@section custom_css
{
    @Styles.Render("~/Content/vendor/toastr/toastr.css")
    @Styles.Render("~/Content/vendor/datatables/dataTables.bootstrap4.min.css")
    @Styles.Render("~/Content/vendor/datatables/fixedColumns.bootstrap4.min.css")
    @Styles.Render("~/Content/vendor/select2/css/select2.css")
    @Styles.Render("~/Content/vendor/select2/css/select2-bootstrap.css")
}
@section custom_js
{
    @Scripts.Render("~/Content/vendor/inputmask/js/jquery.inputmask.bundle.js")
    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")
    @Scripts.Render("~/Content/vendor/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
    @Scripts.Render("~/Content/vendor/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/vendor/datatables/dataTables.bootstrap4.min.js")
    @Scripts.Render("~/Content/vendor/datatables/dataTables.fixedColumns.min.js")
    @Scripts.Render("~/Content/vendor/select2/js/select2.js")
<script>

        let id = '@ViewBag.Id';


        $(document).ready(function () {

            $('.number').inputmask("9{*}", { "placeholder": "" });

            let tempMessage = '@ViewBag.TempMessage';
            if (tempMessage) {
                notify("Success", "success", tempMessage);
            }

            //add bootstrap 4 validation css
            $('#mainFrm').validate().settings.errorClass += ' is-invalid';
            //$('#mainFrm').validate().settings.validClass += ' is-valid';

            $('#mainFrm').keypress(function (e) {
                var key = e.charCode || e.keyCode || 0;
                if (key == 13) {
                    e.preventDefault();
                }
            });



            $('#itemTable').on('change', '.chkItem', function () {
                let itemId = this.value;
                if (this.checked) {
                    deleteRemoved(itemId);
                    checkedIds.push(itemId);
                    selectedRow += 1;
                } else {
                    deleteChecked(itemId);
                    removedIds.push(itemId);
                    selectedRow -= 1;
                }

                $('#rowSelected').text(selectedRow);

                let txt = $('#btnSelectAll').find('.text');
                let icon = $('#btnSelectAll').find('.icon');

                if (selectedRow == recordsTotal) {
                    selectAll = true;
                    $(txt).text("Deselect All");
                    $(icon).html("<i class=\"fas fa-circle\"></i>");
                } else {
                    selectAll = false;
                    $(txt).text("Select All");
                    $(icon).html("<i class=\"fas fa-check-circle\"></i>");
                }

            });

            $('.sel2').select2({
                theme: "bootstrap"
            }).change(function () {
                $(this).valid();
            });


            let transporterId = '@Model.TransporterId';
            loadTransporterDetail(transporterId);

        });

        function Refresh() {
            location.reload();
        }

        $(".sel2").change(function () {
            $(this).valid();
        });

        $('#TransporterId').on('change', function () {
            let transporterId = $(this).val();
            loadTransporterDetail(transporterId);
        });

        function loadTransporterDetail(transporterId) {
            if (transporterId) {
                $("#DriverId .select2-container").prop('disabled', true);
                $("#TruckId .select2-container").prop('disabled', true);
                $('#DriverId').next(".select2-container").hide();
                $('#TruckId').next(".select2-container").hide();
                $('<span class="spinner-border text-success"></span>').insertAfter("#DriverId");
                $('<span class="spinner-border text-success"></span>').insertAfter("#TruckId");
                LoadDriver(transporterId);
                LoadTruck(transporterId);
            } else {
                $("#DriverId").empty();
                $('#DriverId').append("<option value>Please select</option>");
                $("#TruckId").empty();
                $('#TruckId').append("<option value>Please select</option>");
            }
        }

        function LoadDriver(id) {
            $.get('@Url.Action("GetDriverByTransporterId")', { transporterId: id }, function (response) {
                 if (response.stat) {

                     var datas = response.list;

                     let default_val = '';

                     $("#DriverId").empty();
                     $('#DriverId').append("<option value>Please select</option>");
                     $(datas).each(function (k, v) {
                         let data = v;
                         $("#DriverId").append("<option value='" + data.DriverId + "'>" + data.DriverName + "</option>");

                         if (data.DriverId === '@Model.DriverId') {
                             default_val = '@Model.DriverId';
                         }
                     });


                     $('#DriverId').val(default_val);
                     $('#DriverId').change();

                     $("#DriverId").prop('disabled', false);
                     $('#DriverId').next().remove();
                     $('#DriverId').next(".select2-container").show();

                } else {
                    notify("Warning", "warning", response.msg);
                 }
            });
        }

        function LoadTruck(id) {
            $.get('@Url.Action("GetTruckByTransporterId")', { transporterId: id }, function (response) {
                 if (response.stat) {

                     var datas = response.list;

                     let default_val = '';
                     $("#TruckId").empty();
                     $('#TruckId').append("<option value>Please select</option>");
                     $(datas).each(function (k, v) {
                         let data = v;
                         $("#TruckId").append("<option value='" + data.TruckId + "'>" + data.PlateNumber + "</option>");

                         if (data.TruckId === '@Model.TruckId') {
                             default_val = '@Model.TruckId';
                         }
                     });

                     $('#TruckId').val(default_val);
                     $('#TruckId').change();

                     $("#TruckId").prop('disabled', false);
                     $('#TruckId').next().remove();
                     $('#TruckId').next(".select2-container").show();

                } else {
                    notify("Warning", "warning", response.msg);
                 }
            });
        }

        function goBack() {
            location.href = '@Url.Action("Index")';
        }

        function resetForm() {
            $("#preloader").show();
            location.reload();
        }

        let choosedAction = '';

        function submitForm() {
            let form = $('#mainFrm');
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                choosedAction = "save";
                $('#confirmationModal').modal('show');
            } else {
                notify("Info", "info", "Please complete form below.");
            }
        }

        function deleteForm() {
            choosedAction = "delete";
            $('#confirmationModal').modal('show');
        }

        function resetShipment() {
            choosedAction = "reset";
            $('#confirmationModal').modal('show');
        }
        function postForm() {
            choosedAction = "post";
            $('#confirmationModal').modal('show');
        }

        function approveBA() {
            choosedAction = "approve";
            $('#confirmationModal').modal('show');
        }

        $('#btnModalSave').click(function () {
            switch (choosedAction) {
                case "save":
                    updateHeader();
                    break;
                case "delete":
                    deleteData();
                    break;
                case "post":
                    postData();
                    break;
                case "delete_item":
                    doDeleteItem();
                    break;
                case "approve":
                    approveData();
                    break;
                case "reset":
                    resetData();
                    break;
            }

        });

        function updateHeader() {
            let form = $('#mainFrm');
            //double validation, prevent duplication
            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                saveData(form);
            } else {
                notify("Info", "info", "Please complete form below.");
            }

        }

        function saveData(form) {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: form.action,
                data: $(form).serialize(),
                success: function (response) {

                    if (response.stat) {
                        location.reload();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
        }

        function deleteData() {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete")',
                data: { x : id},
                success: function (response) {
                    if (response.stat) {
                        goBack();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
        }

        function resetData() {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Reset")',
                data: { x : id},
                success: function (response) {
                    if (response.stat) {
                        goBack();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
    }

        function postData() {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Close")',
                data: { x: id },
                success: function (response) {
                    if (response.stat) {
                        location.reload();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
        }

        $('#tab-2').on('shown.bs.tab', function (e) {
            RefreshItem();
        });

        function RefreshItem() {
            itemTable.ajax.reload();
        }


        let recordsTotal = 0;
        let selectedRow = 0;
        let selectAll = false;


        $('#btnSelectAll').click(function () {
            if(recordsTotal < 1){
                return false;
            }
            selectAll = !selectAll ?  true : false;
            let txt = $(this).find('.text');
            let icon = $(this).find('.icon');
            $('.chkItem').prop('checked', selectAll);
            checkedIds = [];
            removedIds = [];
            if (selectAll) {
                $(txt).text("Deselect All");
                $(icon).html("<i class=\"fas fa-circle\"></i>");
                //add array
                $('.chkItem:checked').each(function () {
                    if (!isChecked(this.value)) {
                        checkedIds.push(this.value);
                    }
                });
                selectedRow = recordsTotal;
                $('#rowSelected').text(selectedRow);
            } else {
                $(txt).text("Select All");
                $(icon).html("<i class=\"fas fa-check-circle\"></i>");
                selectedRow = checkedIds.length;
                $('#rowSelected').text(selectedRow);
            }



        });

        let checkedIds = [];
        let removedIds = [];

        var itemTable = $('#itemTable').DataTable({
                processing: true,
                serverSide: true,
                ajax: {
                    url: '@Url.Action("DatatableItem")?id=' + id,
                    type: "POST",
                    datatype: "json"
                },
                scrollY: "500px",
                scrollX: true,
                scrollCollapse: true,
                paging: true,
                //fixedColumns: true
                fixedColumns: {
                    leftColumns: 0
                },
            columnDefs: [
                {
                    "orderable": false, "targets": 0, "className": 'dt-body-center', "width" : "1%",
                    "render": function (data, type, full, meta) {
                            return '<input type="checkbox" name="TransactionItemId[]" class="chkItem" value="'+ data.TransactionItemId +'"> ';
                    }}
            ],
            order: [[1, "asc"]],
            columns: [
                    { "data": null, "name": null, "autoWidth": true },
                    { "data": "TagId", "name": "TagId", "autoWidth": true },
                    { "data": "PalletTypeName", "name": "PalletName", "autoWidth": true },
                    { "data": "PalletOwner", "name": "PalletOwner", "autoWidth": true },
                    { "data": "PalletProducer", "name": "PalletProducer", "autoWidth": true },
                    { "data": "ScannedBy", "name": "ScannedBy", "autoWidth": true },
                    { "data": "ScannedAt", "name": "ScannedAt", "autoWidth": true },
                    { "data": "DispatchedBy", "name": "DispatchedBy", "autoWidth": true },
                    { "data": "DispatchedAt", "name": "DispatchedAt", "autoWidth": true },
                    { "data": "PalletMovementStatus", "name": "PalletMovementStatus", "autoWidth": true },

            ],
            rowCallback: function (row, data) {

                if (selectAll) {
                    //check if value exist in removedIds, do not push
                    if (!isRemoved(data.TransactionItemId)) {
                        //prevent duplicate value, remove check first then insert.
                        deleteChecked(data.TransactionItemId);
                        checkedIds.push(data.TransactionItemId);
                    }
                }

                $('.chkItem', row).prop('checked', isChecked(data.TransactionItemId));
            },
            drawCallback: function (settings) {
                let transactionStatus = '@ViewBag.TransactionStatus';
                let shipmentStatus = '@ViewBag.ShipmentStatus';
                if (transactionStatus !== "OPEN" && shipmentStatus !== "LOADING") {
                    var column = itemTable.column(0);
                    column.visible(false);
                }
            }
        });

        function isChecked(id) {
            return ($.inArray(id, checkedIds) > -1);
        }

        function isRemoved(id) {
            return ($.inArray(id, removedIds) > -1);
        }

        function deleteChecked(value) {
            let index = $.inArray(value, checkedIds);
            if (isChecked(value)) {
                checkedIds.splice(index, 1);
            }
        }

        function deleteRemoved(value) {
            let index = $.inArray(value, removedIds);
            if (isRemoved(value)) {
                removedIds.splice(index, 1);
            }
        }

        itemTable.on('xhr', function () {
            let response = itemTable.ajax.json();
            //recordsTotal = response.recordsTotal;
            recordsTotal = response.recordsTotal;
            //let totalScanned = response.totalScanned;
            $('#totalRecords').html(recordsTotal);
            //$('#totalAllPallet').html(recordsTotal);
            //let totalUnscanned = recordsTotal - totalScanned;
            //$('#totalScannedPallet').html(totalScanned);
            //$('#totalUnscannedPallet').html(totalUnscanned);
        });


        function DeleteItem() {
            if (selectedRow < 1) {
                notify("Info", "info", "Please select at least 1 row.");
                return false;
            }

            choosedAction = "delete_item";
            $('#confirmationModal').modal('show');

        }

    function doDeleteItem() {
            //if selectAll == true, then ignore array list. just clear all item by transactionId
            //else, remove item by transactionItemId
            let items =  checkedIds.filter(function (item, pos) {
                return checkedIds.indexOf(item) == pos;
            });
            if (selectAll) {
                items = [];
            }

            let data = { "x": id, "selectAll": selectAll, "items": items }
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteItem")?',
                data: data,
                success: function (response) {
                    if (response.stat) {
                        location.reload();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
    }

        function generateDN() {
            window.open('@Url.Action("GenerateDeliveryNoteAsync")?x=' + id, '_blank');
        }

        let accidentId = '@ViewBag.AccidentId';
        function approveData() {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ApproveBA")',
                data: { x: accidentId },
                success: function (response) {
                    if (response.stat) {
                        location.reload();
                    } else {
                        notify("Warning", "warning", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                    //$("#preloader").fadeOut("slow");
                }
            });
         }

         function generateBA() {
                window.open('@Url.Action("GeneratePDFAsync", "Accident")?x=' + accidentId, '_blank');
        }

        function Dispatch() {
            $("#preloader").show();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Dispatch")',
                data: { x : id},
                success: function (response) {
                    if (response.stat) {
                        goBack();
                    } else {
                        notify("Success", "success", response.msg);
                        $("#preloader").fadeOut("slow");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    notify("Error", "error", "Oops! Something went wrong.");
                    $("#preloader").fadeOut("slow");
                },
                complete: function () {
                }
            });
        }
</script>
}