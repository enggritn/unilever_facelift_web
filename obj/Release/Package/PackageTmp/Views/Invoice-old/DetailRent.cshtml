@model Facelift_App.Models.BillingRentVM


@{
    ViewBag.Title += " - Detail (" + @Model.AgingType + ")";
}



    <div class="container-fluid">

        <div class="d-sm-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
        </div>

        <div class="row mb-3">
            <div class="col-xs-12 col-lg-12">
                <button type="button" onclick="goBack()" class="btn btn-info btn-icon-split">
                    <span class="icon text-white-50">
                        <i class="fas fa-arrow-left"></i>
                    </span>
                    <span class="text">Back</span>
                </button>
                <button type="button" onclick="generatePDF()" class="btn btn-success btn-icon-split">
                    <span class="icon text-white-50">
                        <i class="fas fa-file"></i>
                    </span>
                    <span class="text">Generate PDF</span>
                </button>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-xs-12 col-lg-12">
                <div class="card shadow border-left-primary">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-xs-6 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Document Number</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.TransactionCode, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Warehouse</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.WarehouseName, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Total Pallet</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.TotalPallet, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Total Price</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Tax (%)</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                @if (Model.AgingType.Equals("UNUSED"))
                                {
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Payment Weight (%)</label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(m => m.Payment, new { @class = "form-control-plaintext", @readonly = "" })
                                        </div>
                                    </div>
                                }

                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Grand Total</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.GrandTotal, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-6 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Year</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.CurrentYear, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Month</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.CurrentMonth, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Start Period</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.StartPeriod, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = Model.StartPeriod.ToString("d MMM yyyy") } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Last Period</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.StartPeriod, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = Model.LastPeriod.ToString("d MMM yyyy") } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Created By</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-form-label col-sm-4">Created At</label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "", @Value = Model.CreatedAt.ToString("d MMM yyyy HH:mm:ss") } })
                                    </div>
                                </div>
                                @if (Model.AgingType.Equals("UNUSED"))
                                {
                                    <div class="form-group row">
                                        <label class="col-form-label col-sm-4">Remarks</label>
                                        <div class="col-sm-8">
                                            @Html.Raw(Model.Remarks)
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <table class="table table-bordered table-striped" id="itemTable" width="100%" cellspacing="0">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>Tag Id</th>
                                            <th>Pallet Name</th>
                                            <th>Pallet Owner</th>
                                            <th>Pallet Producer</th>
                                            <th>Year</th>
                                            <th>Month</th>
                                            <th>Total Minutes</th>
                                            <th>Total Hours</th>
                                            <th>Total Days</th>
                                            <th>Pallet Age (Year)</th>
                                            <th>Price / Day</th>
                                            <th>Total Price</th>
                                        </tr>
                                    </thead>
                                </table>

                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
       
    </div>
@Html.Partial("ConfirmationModal")

@section custom_css
{
    @Styles.Render("~/Content/vendor/toastr/toastr.css")
    @Styles.Render("~/Content/vendor/datatables/dataTables.bootstrap4.min.css")
    @Styles.Render("~/Content/vendor/datatables/fixedColumns.bootstrap4.min.css")

    <style>
        th, td {
            white-space: nowrap;
        }

        div.dataTables_wrapper {
            /*width: 800px;*/
            margin: 0 auto;
        }
    </style>

}
@section custom_js
{
    @Scripts.Render("~/Content/vendor/toastr/toastr.min.js")
    @Scripts.Render("~/Content/custom/js/notification.js")
    @Scripts.Render("~/Content/vendor/datatables/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/vendor/datatables/dataTables.bootstrap4.min.js")
    @Scripts.Render("~/Content/vendor/datatables/dataTables.fixedColumns.min.js")

<script>


      let id = '@ViewBag.Id';

      $(document).ready(function () {

            let tempMessage = '@ViewBag.TempMessage';
            if (tempMessage) {
                notify("Success", "success", tempMessage);
            }

      });


         var tableItem = $('#itemTable').DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: '@Url.Action("DatatableItemRent")?id=' + id,
                        type: "POST",
                        datatype: "json"
                    },
                    scrollY: "500px",
                    scrollX: true,
                    scrollCollapse: true,
                    paging: true,
                    //fixedColumns: true
                    fixedColumns: {
                        leftColumns: 1
                    },
                    order : [[0, "asc"]],
                    columns: [
                        { "data": "PalletId", "name": "PalletId", "autoWidth": true },
                        { "data": "PalletTypeName", "name": "PalletName", "autoWidth": true },
                        { "data": "PalletOwner", "name": "PalletOwner", "autoWidth": true },
                        { "data": "PalletProducer", "name": "PalletProducer", "autoWidth": true },
                        { "data": "CurrentYear", "name": "CurrentYear", "autoWidth": true },
                        { "data": "CurrentMonth", "name": "CurrentMonth", "autoWidth": true },
                        { "data": "TotalMinutes", "name": "TotalMinutes", "autoWidth": true },
                        { "data": "TotalHours", "name": "TotalHours", "autoWidth": true },
                        { "data": "TotalDays", "name": "TotalDays", "autoWidth": true },
                        { "data": "BillingYear", "name": "BillingYear", "autoWidth": true },
                        { "data": "BillingPrice", "name": "BillingPrice", "autoWidth": true },
                        { "data": "TotalBilling", "name": "TotalBilling", "autoWidth": true }
                    ]
           });


        function goBack() {
            location.href = '@Url.Action("Index")';
        }

        function RefreshItem() {
            tableItem.ajax.reload();
        }

        function generatePDF() {
            window.open('@Url.Action("GeneratePDFAsync")?x=' + id, '_blank');
        }
</script>

}